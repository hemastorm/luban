<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.storm.luban.dao.ReceiverMapper" >
  <resultMap id="BaseResultMap" type="com.storm.luban.bean.Receiver" >
    <id column="receiver_id" property="receiverId" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="DECIMAL" />
    <result column="user_nick" property="userNick" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="distinct" property="distinct" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="zip" property="zip" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="shipping_type" property="shippingType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    receiver_id, user_id, user_nick, NAME, phone, mobile, state, city, distinct, address, 
    zip, note, shipping_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from receiver
    where receiver_id = #{receiverId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from receiver
    where receiver_id = #{receiverId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.storm.luban.bean.Receiver" >
    insert into receiver (receiver_id, user_id, user_nick, 
      NAME, phone, mobile, 
      state, city, distinct, 
      address, zip, note, 
      shipping_type)
    values (#{receiverId,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, #{userNick,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{distinct,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{shippingType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.storm.luban.bean.Receiver" >
    insert into receiver
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userNick != null" >
        user_nick,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="distinct != null" >
        distinct,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="shippingType != null" >
        shipping_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="receiverId != null" >
        #{receiverId,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="userNick != null" >
        #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="distinct != null" >
        #{distinct,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="shippingType != null" >
        #{shippingType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.storm.luban.bean.Receiver" >
    update receiver
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="userNick != null" >
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="distinct != null" >
        distinct = #{distinct,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="shippingType != null" >
        shipping_type = #{shippingType,jdbcType=INTEGER},
      </if>
    </set>
    where receiver_id = #{receiverId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.storm.luban.bean.Receiver" >
    update receiver
    set user_id = #{userId,jdbcType=DECIMAL},
      user_nick = #{userNick,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      distinct = #{distinct,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zip = #{zip,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      shipping_type = #{shippingType,jdbcType=INTEGER}
    where receiver_id = #{receiverId,jdbcType=DECIMAL}
  </update>
</mapper>